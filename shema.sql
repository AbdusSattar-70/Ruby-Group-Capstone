CREATE DATABASE CATALOG;

CREATE TABLE  ITEM (
  id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  publish_date DATE NOT NULL,
  archived BOOLEAN NOT NULL
);

CREATE TABLE BOOK (
  id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  publisher VARCHAR(50) NOT NULL,
  cover_state VARCHAR(50) NOT NULL,
  FOREIGN KEY (id) REFERENCES item(id) ON DELETE CASCADE
);

CREATE TABLE LABEL (
  id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  title VARCHAR(50) NOT NULL,
  color VARCHAR(50) NOT NULL,
  book_id INT,
  FOREIGN KEY (book_id) REFERENCES item(id) ON DELETE CASCADE
);

CREATE TABLE GAME (
  id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  multiplayer VARCHAR(50) NOT NULL,
  last_player_at DATE NOT NULL,
  item_id INT,
  FOREIGN KEY (item_id) REFERENCES item(id) ON DELETE CASCADE
);

CREATE TABLE AUTHOR (
  id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  first_name VARCHAR(50) NOT NULL,
  last_name VARCHAR(50) NOT NULL,
  author_id INT,
  FOREIGN KEY (auothor_id) REFERENCES item(id) ON DELETE CASCADE
);

-- Create genres table
CREATE TABLE genres (
  id INT Generated ALWAYS AS IDENTITY PRIMARY KEY,
  name VARCHAR(100),
);

-- Create music albums table
CREATE TABLE music_albums (
  id INT Generated ALWAYS AS IDENTITY PRIMARY KEY,
  publish_date DATE NOT NULL DEFAULT DATE,
  on_spotify BOOLEAN,
  archived BOOLEAN,
  genre_id INT,
  CONSTRAINT fk_genre FOREIGN KEY (genre_id) REFERENCES genres(id)
);